version: '3.1'

services:
  mongo:
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    expose:
      - 27017
    volumes:
      - ./db:/data/db
      - ./configdb:/data/configdb
  web-base: &web-base
    build:
      context: ./rust
      cache_from:
        - ringoro-rust-image-cache
    image: ringoro-rust-image:0.1.0
    working_dir: /app
    volumes:
      - ./rust:/app
      - ./rust/target/.registry:/usr/local/cargo/registry
      - ./rust/target/.cache:/usr/local/cargo/cache
    environment: &rust-environment
      CARGO_TARGET_DIR: /app/target
      RINGORO_DB_URI: 'mongodb://root:password@mongo:27017'
      RINGORO_DB_DATABASE: 'ringoro-dev'
      MONGO_TEST_URI: 'mongodb://root:password@mongo:27017'
      MONGO_TEST_DATABASE: 'ringoro-unittest'
    expose:
      - 8080
  js-base: &js-base
    build:
      context: ./js
    working_dir: /app
    volumes:
      - ./js:/app
  test-base: &test-base
    build:
      context: ./test
    working_dir: /work
    volumes:
      - ./test:/work
  web:
    <<: *web-base
    container_name: ringoro-ci-web
    tty: true
    stdin_open: true
  apiserver:
    <<: *web-base
    container_name: ringoro-ci-apiserver
    command: sh -c '/wait && cargo run'
    depends_on:
      - mongo
    environment:
      <<: *rust-environment
      RINGORO_HOST: 'apiserver'
      RINGORO_PORT: '8080'
      WAIT_HOSTS: mongo:27017
      WAIT_HOSTS_TIMEOUT: 60
  frontend:
    <<: *js-base
    container_name: ringoro-ci-frontend
  apitest:
    <<: *test-base
    container_name: ringoro-ci-integration-test
    depends_on:
      - apiserver
    environment:
      WAIT_HOSTS: apiserver:8080
      WAIT_HOSTS_TIMEOUT: 60
      HOST: apiserver
      PORT: '8080'
    tty: true
    stdin_open: true
